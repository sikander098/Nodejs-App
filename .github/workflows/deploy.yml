name: Deploy Node.js App

on:
  push:
    branches: [master]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

  build-push:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/node-app:latest
  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - name: SSH into EC2 and deploy
        run: |
          echo "${{ secrets.EC2_KEY }}" | base64 --decode > key.pem
          chmod 400 key.pem
          ssh -i key.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} "
            docker pull ${{ env.DOCKERHUB_USERNAME }}/node-app:latest
            docker stop my-nodejs-app || true  # Stop the container if it exists
            docker rm my-nodejs-app || true    # Remove the container if it exists
            docker run -d --name my-nodejs-app -p 3001:3000 ${{ env.DOCKERHUB_USERNAME }}/node-app:latest
          "
